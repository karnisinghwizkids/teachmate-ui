


name: CI/CD Pipeline for Firebase Deployment - Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  actions: write
  id-token: write
  issues: write
  pull-requests: write


jobs:
  build-and-deploy:
    name: Build & Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check if build folder exists
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: Build directory 'dist/' does not exist! Deployment failed."
            exit 1
          fi

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Write Firebase production service account key to file
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}' > service-account.json

      - name: Deploy to Firebase (Production)
        #run: firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID_PROD }} --non-interactive
        run: |
          firebase deploy \
            --only hosting:teachmate-ui-dev \
            --project ${{ secrets.FIREBASE_PROJECT_ID_PROD }} \
            --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account.json


  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Trivy CLI v0.30.0
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.30.0/trivy_0.30.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.30.0_Linux-64bit.deb

      - name: Run Trivy Vulnerability and Secrets Scan
        run: |
          trivy fs . \
            --security-checks vuln,secret \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --no-progress


  zap-scan:
    name: Run ZAP Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: 'https://studentmate-2b859.web.app'
          docker_name: 'zaproxy/zap-stable'
          # token: ${{ secrets.ZAP_GITHUB_TOKEN }}
          fail_action: false
          cmd_options: '-J zap_report.json -r zap_report.html -w zap_report.md'
         
      - name: Upload ZAP HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: |
             zap_report.html
             zap_report.md
             zap_report.json


  gitleaks-scan:
    name: Run Gitleaks Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
